// Script para implementar o Plano Individual de R$ 20,00
// Execute: node implementar-plano-individual.js

const fs = require('fs');
const path = require('path');

console.log('üöÄ Iniciando implementa√ß√£o do Plano Individual R$ 20,00...\n');

// 1. Verificar se os arquivos foram modificados
function verifyImplementation() {
  console.log('‚úÖ Verificando implementa√ß√£o...');
  
  // Verificar planos/page.tsx
const planosPath = path.join(__dirname, 'app', 'planos', 'page.tsx');
try {
  const planosContent = fs.readFileSync(planosPath, 'utf8');
  if (planosContent.includes('"Individual"') && planosContent.includes('30 Dias de Uso Ilimitado GR√ÅTIS!')) {
    console.log('‚úÖ app/planos/page.tsx - OK');
  } else {
    console.log('‚ùå app/planos/page.tsx - N√£o atualizado');
  }
} catch (error) {
  console.error('‚ùå Erro ao verificar planos:', error.message);
}
  
  // Verificar plan-migrations.ts
  const migrationsPath = path.join(__dirname, 'lib', 'supabase', 'plan-migrations.ts');
  try {
    const content = fs.readFileSync(migrationsPath, 'utf8');
    if (content.includes("plan_id: 'individual'")) {
      console.log('‚úÖ lib/supabase/plan-migrations.ts - OK');
    } else {
      console.log('‚ùå lib/supabase/plan-migrations.ts - N√£o atualizado');
    }
  } catch (error) {
    console.error('‚ùå Erro ao verificar plan-migrations:', error.message);
  }
  
  // Verificar script SQL
  const sqlPath = path.join(__dirname, 'scripts', 'add-plano-individual.sql');
  try {
    if (fs.existsSync(sqlPath)) {
      console.log('‚úÖ scripts/add-plano-individual.sql - OK');
    } else {
      console.log('‚ùå scripts/add-plano-individual.sql - N√£o encontrado');
    }
  } catch (error) {
    console.error('‚ùå Erro ao verificar script SQL:', error.message);
  }
}

// 2. Mostrar pr√≥ximos passos
function showNextSteps() {
  console.log('\nüìã PR√ìXIMOS PASSOS:');
  console.log('\n1. üóÑÔ∏è  BANCO DE DADOS:');
  console.log('   - Acesse o Supabase Dashboard');
  console.log('   - V√° para SQL Editor');
  console.log('   - Execute o arquivo: scripts/add-plano-individual.sql');
  
  console.log('\n2. üß™ TESTES:');
  console.log('   - Acesse /planos para ver o novo plano');
  console.log('   - Verifique se o layout com 5 colunas est√° funcionando');
  console.log('   - Teste a contrata√ß√£o do plano individual');
  
  console.log('\n3. üí∞ CONFIGURA√á√ÉO DE PAGAMENTO:');
  console.log('   - Configure o plano no sistema de pagamento (Stripe/PagSeguro)');
  console.log('   - Defina o valor de R$ 20,00');
  console.log('   - Teste o fluxo de pagamento completo');
  
  console.log('\n4. üìä MONITORAMENTO:');
  console.log('   - Monitore logs de cria√ß√£o de usu√°rios com plano individual');
  console.log('   - Verifique se as limita√ß√µes est√£o sendo aplicadas corretamente');
  console.log('   - Teste o limite de 1 ve√≠culo por usu√°rio');
}

// 3. Resumo da implementa√ß√£o
function showSummary() {
  console.log('\nüìä RESUMO DA IMPLEMENTA√á√ÉO:');
  console.log('\nüéØ PLANO INDIVIDUAL - R$ 20,00:');
  console.log('   ‚úÖ Apenas 1 ve√≠culo');
  console.log('   ‚úÖ Sem an√∫ncios inclusos');
  console.log('   ‚úÖ Cadastro b√°sico apenas');
  console.log('   ‚úÖ Sem acesso ao painel');
  console.log('   ‚úÖ Suporte b√°sico por email');
  console.log('   ‚úÖ 50MB de armazenamento');
  console.log('   ‚úÖ Sem chamadas de API');
  
  console.log('\nüîß ARQUIVOS MODIFICADOS:');
  console.log('   ‚úÖ app/planos/page.tsx (novo plano + banner promocional + termos)');
  console.log('   ‚úÖ lib/supabase/plan-migrations.ts (configura√ß√µes do plano)');
  
  console.log('\nüìÅ ARQUIVOS CRIADOS:');
  console.log('   ‚úÖ scripts/add-plano-individual.sql (script para Supabase)');
  console.log('   ‚úÖ implementar-plano-individual.js (este script)');
}

// Executar verifica√ß√µes
verifyImplementation();
showSummary();
showNextSteps();

console.log('\nüéâ Implementa√ß√£o do Plano Individual conclu√≠da!');
console.log('üí° Execute o script SQL no Supabase para finalizar a configura√ß√£o.');