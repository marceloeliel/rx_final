version: '3.8'

services:
  # Aplicação RX Veículos
  rx-veiculos:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: ${NODE_ENV}
      PORT: "3000"
      NEXTAUTH_URL: ${NEXTAUTH_URL}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXT_PUBLIC_SUPABASE_URL: ${NEXT_PUBLIC_SUPABASE_URL}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${NEXT_PUBLIC_SUPABASE_ANON_KEY}
      SUPABASE_SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_ROLE_KEY}
      DATABASE_URL: ${DATABASE_URL}
      WEBHOOK_URL: ${WEBHOOK_URL}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      POSTGRES_HOST: ${POSTGRES_HOST}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_POOL_MODE: ${POSTGRES_POOL_MODE}
      NEXT_PUBLIC_FIPE_API_TOKEN: ${NEXT_PUBLIC_FIPE_API_TOKEN}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
      WEBSITE_URL: ${WEBSITE_URL}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - rx-network

  # Nginx Reverse Proxy (opcional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - rx-veiculos
    restart: unless-stopped
    networks:
      - rx-network

networks:
  rx-network:
    driver: bridge

volumes:
  ssl_certs:
