# ðŸš— RX VeÃ­culos - Dockerfile com NPM
FROM node:20-alpine AS deps

# Instalar dependÃªncias do sistema
RUN apk add --no-cache libc6-compat git ca-certificates openssl

WORKDIR /app

# Copiar arquivos de dependÃªncias
COPY package*.json ./

# Instalar dependÃªncias com npm
RUN npm ci --only=production

# Stage 2: Builder
FROM node:20-alpine AS builder
RUN apk add --no-cache libc6-compat git ca-certificates openssl

WORKDIR /app

# Copiar dependÃªncias
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build da aplicaÃ§Ã£o
RUN npm run build

# Stage 3: Runner
FROM node:20-alpine AS runner
RUN apk add --no-cache libc6-compat

WORKDIR /app

ENV NODE_ENV=production
ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Criar usuÃ¡rio nÃ£o-root
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs

# Copiar arquivos necessÃ¡rios
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

USER nextjs

EXPOSE 3000

CMD ["node", "server.js"]